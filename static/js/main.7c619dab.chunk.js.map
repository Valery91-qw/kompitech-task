{"version":3,"sources":["view/joke-categories/JokeCategories.module.css","view/App.module.css","view/get-joke-button/GetJokeButton.module.css","view/get-joke-input/GetJokeTextInput.module.css","dal/chucknorris-api.ts","view/joke-categories/JokeCategories.tsx","view/get-joke-button/GetJokeButton.tsx","view/header/Header.tsx","view/get-joke-input/GetJokeTextInput.tsx","view/disply-jokes-area/DisplayJokesArea.tsx","view/App.tsx","reportWebVitals.ts","index.tsx","view/header/Header.module.css","view/disply-jokes-area/DisplayJokesArea.module.css"],"names":["module","exports","instance","axios","create","baseURL","chucknorrisApi","category","get","params","then","result","data","catch","err","console","error","text","query","JokeCategories","setCurrentCategory","useState","categories","setCategories","useEffect","allCategories","onChange","event","currentTarget","value","className","styles","select","defaultValue","find","el","map","option","GetJokeButton","currentCategory","setJokeData","button","onClick","Header","jokeData","logo","src","alt","title","GetJokeTextInput","setJokesByText","fetchJokeValue","setFetchJokeValue","length","timerId","setTimeout","res","clearTimeout","input","minLength","placeholder","DisplayJokesArea","jokesByText","displayedJokes","slice","container","index","span","id","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7c619dab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"select\":\"JokeCategories_select__2rC0I\",\"option\":\"JokeCategories_option__qOFuq\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__fZQXe\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"GetJokeButton_button__2zwdo\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"GetJokeTextInput_input__vepYf\"};","import axios from 'axios';\r\n\r\nconst instance = axios.create({\r\n    baseURL: 'https://api.chucknorris.io/jokes/'\r\n})\r\n\r\nexport const chucknorrisApi = {\r\n\r\n    getJoke(category?: string) {\r\n       return instance.get<JokeType>(`random`, {\r\n           params: {\r\n               category: category,\r\n           }})\r\n            .then(result => {\r\n                return result.data\r\n            })\r\n            .catch(err => {\r\n                console.error(err)\r\n            })\r\n    },\r\n\r\n    getCategories() {\r\n        return instance.get<Array<string>>(`categories`)\r\n            .then(result => result.data)\r\n            .catch(err => {\r\n                console.error(err)\r\n            })\r\n    },\r\n\r\n    getJokeByText(text: string) {\r\n        return instance.get<JokeByTextType<JokeType>>(`search`, {\r\n            params: {\r\n                query: text\r\n            }\r\n        })\r\n            .then(result => result.data)\r\n            .catch(err => {\r\n                console.error(err)\r\n            })\r\n    }\r\n}\r\n\r\nexport type JokeType = {\r\n    categories: Array<string>,\r\n    created_at: Date,\r\n    icon_url: string\r\n    id: string\r\n    updated_at: Date\r\n    url: string\r\n    value: string\r\n}\r\n\r\nexport type JokeByTextType<J> = {\r\n    total: number\r\n    result: Array<J>\r\n}","import {ChangeEvent, useEffect, useState} from \"react\";\r\nimport {chucknorrisApi} from \"../../dal/chucknorris-api\";\r\nimport styles from \"./JokeCategories.module.css\";\r\n\r\ntype JokeCategoriesType = {\r\n    setCurrentCategory: (category: string) => void\r\n}\r\n\r\nexport const JokeCategories = ({setCurrentCategory}: JokeCategoriesType) => {\r\n\r\n    const [categories, setCategories] = useState<Array<string>>();\r\n\r\n    useEffect(() => {\r\n        chucknorrisApi.getCategories()\r\n            .then(result => {\r\n                if (result) {\r\n                    const allCategories = ['random', ...result]\r\n                    setCategories(allCategories)\r\n                }\r\n            })\r\n    }, []);\r\n\r\n    const setCategory = (event: ChangeEvent<HTMLSelectElement>) => {\r\n        setCurrentCategory(event.currentTarget.value)\r\n    }\r\n\r\n    return (\r\n        <select onChange={setCategory}\r\n                className={styles.select}\r\n                defaultValue={categories?.find((el) => el === 'random')}>\r\n\r\n            {categories?.map((category) => {\r\n                return <option className={styles.option} key={category}>{category}</option>\r\n            })}\r\n\r\n        </select>\r\n    );\r\n};","import styles from \"./GetJokeButton.module.css\";\r\nimport React from \"react\";\r\nimport {chucknorrisApi, JokeType} from \"../../dal/chucknorris-api\";\r\n\r\ntype GetJokeButtonType = {\r\n    currentCategory: string\r\n    setJokeData: (joke: JokeType) => void\r\n}\r\n\r\nexport const GetJokeButton = ({currentCategory, setJokeData}: GetJokeButtonType) => {\r\n\r\n    const fetchJoke = () => {\r\n        if (currentCategory === 'random' || currentCategory === '') {\r\n            chucknorrisApi.getJoke().then(result => {\r\n                if (result) setJokeData(result)\r\n            })\r\n        } else {\r\n            chucknorrisApi.getJoke(currentCategory).then(result => {\r\n                if (result) setJokeData(result)\r\n            })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <button className={styles.button} onClick={fetchJoke}>Get Joke</button>\r\n    )\r\n}","import styles from \"./Header.module.css\";\r\nimport React from \"react\";\r\nimport {JokeType} from \"../../dal/chucknorris-api\";\r\n\r\ntype HeaderType = {\r\n    jokeData: JokeType | undefined\r\n}\r\n\r\nexport const Header = ({jokeData}: HeaderType) => {\r\n\r\n    return (\r\n        <>\r\n            <img className={styles.logo}\r\n                 src={`https://api.chucknorris.io/img/chucknorris_logo_coloured_small@2x.png`}\r\n                 alt='chack-logo'/>\r\n            <h2 className={styles.title}>Joke:</h2>\r\n            <p className={styles.text}>{jokeData?.value}</p>\r\n        </>\r\n    )\r\n}","import {ChangeEvent, useEffect, useState} from \"react\";\r\nimport styles from \"./GetJokeTextInput.module.css\";\r\nimport {chucknorrisApi, JokeType} from \"../../dal/chucknorris-api\";\r\n\r\ntype GetJokeTextInputType = {\r\n    setJokesByText: (jokes: Array<JokeType>) => void\r\n}\r\n\r\n\r\nexport const GetJokeTextInput = ({ setJokesByText }: GetJokeTextInputType) => {\r\n\r\n    const [fetchJokeValue, setFetchJokeValue] = useState<string>()\r\n\r\n    const setSearchValue = (event: ChangeEvent<HTMLInputElement>) => {\r\n        setFetchJokeValue(event.currentTarget.value)\r\n    }\r\n\r\n    useEffect(() => {\r\n        if(fetchJokeValue && fetchJokeValue.length > 2) {\r\n            const timerId = setTimeout(() => {\r\n                chucknorrisApi.getJokeByText(fetchJokeValue)\r\n                    .then((res) => {\r\n                        if(res) setJokesByText(res.result)\r\n                    })\r\n            }, 600)\r\n            return () => {\r\n                clearTimeout(timerId)\r\n            }\r\n        } else {\r\n            return () => {\r\n                setJokesByText([])\r\n            }\r\n        }\r\n    }, [fetchJokeValue, setJokesByText])\r\n\r\n    return (\r\n        <input className={styles.input}\r\n               onChange={setSearchValue}\r\n               minLength={3}\r\n               placeholder='More then 2 symbols'/>\r\n    )\r\n}","import {JokeType} from \"../../dal/chucknorris-api\";\r\nimport styles from \"./DisplayJokesArea.module.css\";\r\n\r\ntype DisplayJokesAreaType = {\r\n    jokesByText: Array<JokeType> | undefined\r\n}\r\n\r\nexport const DisplayJokesArea = ({jokesByText}: DisplayJokesAreaType) => {\r\n\r\n    if (jokesByText && jokesByText.length > 0) {\r\n\r\n        const displayedJokes = jokesByText.slice(0, 5)\r\n\r\n        return (\r\n            <div className={styles.container}>\r\n                {displayedJokes.map((jokeData, index) => {\r\n                    return <span className={styles.span} key={jokeData.id}>{++index}.{jokeData.value}</span>\r\n                })}\r\n            </div>\r\n        )\r\n    } else {\r\n        return <div className={styles.container}>Please input the value</div>\r\n    }\r\n}","import React, {useEffect, useState} from \"react\";\nimport {JokeCategories} from \"./joke-categories/JokeCategories\";\nimport styles from \"./App.module.css\";\nimport {chucknorrisApi, JokeType} from \"../dal/chucknorris-api\";\nimport {GetJokeButton} from \"./get-joke-button/GetJokeButton\";\nimport {Header} from \"./header/Header\";\nimport {GetJokeTextInput} from \"./get-joke-input/GetJokeTextInput\";\nimport {DisplayJokesArea} from \"./disply-jokes-area/DisplayJokesArea\";\n\nfunction App() {\n\n    const [currentCategory, setCurrentCategory] = useState<string>('')\n    const [jokeData, setJokeData] = useState<JokeType>()\n    const [jokesByText, setJokesByText] = useState<Array<JokeType>>()\n\n    useEffect(() => {\n        if(currentCategory === '' || currentCategory === 'random') {\n            chucknorrisApi.getJoke()\n                .then(res => {\n                    if(res) setJokeData(res)\n                })\n        } else {\n            chucknorrisApi.getJoke(currentCategory)\n                .then(res => {\n                    if(res) setJokeData(res)\n                })\n        }\n    }, [currentCategory])\n\n    return (\n        <div className={styles.container}>\n            <Header jokeData={jokeData} />\n            <JokeCategories setCurrentCategory={setCurrentCategory}/>\n            <GetJokeButton currentCategory={currentCategory} setJokeData={setJokeData}/>\n            <GetJokeTextInput setJokesByText={setJokesByText}/>\n            <DisplayJokesArea jokesByText={jokesByText} />\n        </div>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './view/App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"logo\":\"Header_logo__2aUOZ\",\"title\":\"Header_title__22B2R\",\"text\":\"Header_text__3fpcH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"DisplayJokesArea_container__3j8C0\",\"span\":\"DisplayJokesArea_span__3wMXG\"};"],"sourceRoot":""}